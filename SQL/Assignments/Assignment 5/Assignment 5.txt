Q1) List all the books that are written by Author Loni and has price less then 600.
mysql> select * from books where author_name = 'Loni' and cost < 600;
+---------+---------------------+-------------+--------+----------+
| book_no | book_name           | author_name | cost   | category |
+---------+---------------------+-------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni        | 550.00 | Database |
+---------+---------------------+-------------+--------+----------+
1 row in set (0.00 sec)

Q2) List the Issue details for the books that are not returned yet.
mysql> select * from issue where return_date is null;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | NULL        |
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

Q3) Update all the blank return_date with 31-Dec-06 excluding 7005 and 7006.
mysql> select * from issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | NULL        |
|         7002 |     102 |         2 | 2006-12-25 | NULL        |
|         7003 |     104 |         1 | 2006-01-15 | NULL        |
|         7004 |     101 |         1 | 2006-07-04 | NULL        |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

mysql> update issue set return_date = '2000-12-31' where return_date is null and lib_issue_id not in (7005, 7006);
Query OK, 4 rows affected (0.01 sec)
Rows matched: 4  Changed: 4  Warnings: 0

mysql> select * from issue;
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | 2000-12-31  |
|         7002 |     102 |         2 | 2006-12-25 | 2000-12-31  |
|         7003 |     104 |         1 | 2006-01-15 | 2000-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2000-12-31  |
|         7005 |     104 |         2 | 2006-11-15 | NULL        |
|         7006 |     101 |         3 | 2006-02-18 | NULL        |
+--------------+---------+-----------+------------+-------------+
6 rows in set (0.00 sec)

Q4) List all the Issue details that have books issued for more then 30 days.
mysql> select * from issue where datediff(return_date, issue_date) > 30;
Empty set (0.00 sec)

Q5) List all the books that have price in range of 500 to 750 and has category as Database.
mysql> select * from books where cost between 500 and 750 and category = 'Database';
+---------+---------------------+-------------+--------+----------+
| book_no | book_name           | author_name | cost   | category |
+---------+---------------------+-------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni        | 550.00 | Database |
+---------+---------------------+-------------+--------+----------+
1 row in set (0.00 sec)

Q6) List all the books that belong to any one of the following categories Science, Database, Fiction, Management.
mysql> select * from books where category in ('Science', 'Database', 'Fiction', 'Management');
+---------+---------------------+--------------+--------+----------+
| book_no | book_name           | author_name  | cost   | category |
+---------+---------------------+--------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni         | 550.00 | Database |
|     103 | SQL-PL/SQL          | Ivan Bayross | 250.00 | Database |
+---------+---------------------+--------------+--------+----------+
2 rows in set (0.00 sec)

Q7) List all the members in the descending order of Penalty due on them.
mysql> select * from member order by penalty_amount desc;
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma  | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 |
|         3 | Gaurav Kumar  | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
|         2 | Garima Sen    | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

Q8) Modify the price of book with id 103 to Rs 300 and category to RDBMS.
mysql> select * from books;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     101 | Let us C            | Yashwant Kanetkar | 450.00 | System   |
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     103 | SQL-PL/SQL          | Ivan Bayross      | 250.00 | Database |
|     104 | Mastering C++       | Scott Urman       | 300.00 | System   |
+---------+---------------------+-------------------+--------+----------+
4 rows in set (0.00 sec)

mysql> update books set cost = 300, category = 'RDBMS' where book_no = 103;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from books;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     101 | Let us C            | Yashwant Kanetkar | 450.00 | System   |
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     103 | SQL-PL/SQL          | Ivan Bayross      | 300.00 | RDBMS    |
|     104 | Mastering C++       | Scott Urman       | 300.00 | System   |
+---------+---------------------+-------------------+--------+----------+
4 rows in set (0.00 sec)

9) List all the books in ascending order of category and descending order of price.
mysql> select * from books order by category asc, cost desc;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     103 | SQL-PL/SQL          | Ivan Bayross      | 300.00 | RDBMS    |
|     101 | Let us C            | Yashwant Kanetkar | 450.00 | System   |
|     104 | Mastering C++       | Scott Urman       | 300.00 | System   |
+---------+---------------------+-------------------+--------+----------+
4 rows in set (0.00 sec)

10) List all the books that contain word SQL in the name of the book.
mysql> select * from books where book_name like '%SQL%';
+---------+------------+--------------+--------+----------+
| book_no | book_name  | author_name  | cost   | category |
+---------+------------+--------------+--------+----------+
|     103 | SQL-PL/SQL | Ivan Bayross | 300.00 | RDBMS    |
+---------+------------+--------------+--------+----------+
1 row in set (0.00 sec)

11) List the Lib_Issue_Id, Issue_Date, Return_Date and No of days Book was issued.
mysql> select lib_issue_id, issue_date, return_date, datediff(return_date, issue_date) as days_issued from issue;
+--------------+------------+-------------+-------------+
| lib_issue_id | issue_date | return_date | days_issued |
+--------------+------------+-------------+-------------+
|         7001 | 2006-12-10 | 2000-12-31  |       -2170 |
|         7002 | 2006-12-25 | 2000-12-31  |       -2185 |
|         7003 | 2006-01-15 | 2000-12-31  |       -1841 |
|         7004 | 2006-07-04 | 2000-12-31  |       -2011 |
|         7005 | 2006-11-15 | NULL        |        NULL |
|         7006 | 2006-02-18 | NULL        |        NULL |
+--------------+------------+-------------+-------------+
6 rows in set (0.00 sec)

12) Find the details of the member of the Library in the order of their joining the library.
mysql> select * from member order by acc_open_date asc;
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma  | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 |
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
|         3 | Gaurav Kumar  | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
|         2 | Garima Sen    | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

13) Display the count of total no of books issued to Member 101.
mysql> select count(book_no) from issue where member_id = 101;
+----------------+
| count(book_no) |
+----------------+
|              0 |
+----------------+
1 row in set (0.00 sec)

14) Display the total penalty due for all the members.
mysql> select sum(penalty_amount) from member;
+---------------------+
| sum(penalty_amount) |
+---------------------+
|               80.00 |
+---------------------+
1 row in set (0.00 sec)

15) Display the total no of members
mysql> select count(*) from member;
+----------+
| count(*) |
+----------+
|        5 |
+----------+
1 row in set (0.01 sec)

16) Display the total no of books issued
mysql> select count(*) from issue;
+----------+
| count(*) |
+----------+
|        6 |
+----------+
1 row in set (0.00 sec)

17) Display the average membership fees paid by all the members
mysql> select avg(fees_paid) from member;
+----------------+
| avg(fees_paid) |
+----------------+
|      1060.0000 |
+----------------+
1 row in set (0.00 sec)

18) List the various categories and count of books in each category.
mysql> select category, count(*) from books group by category;
+----------+----------+
| category | count(*) |
+----------+----------+
| System   |        2 |
| Database |        1 |
| RDBMS    |        1 |
+----------+----------+
3 rows in set (0.00 sec)

19) List the book_No and the number of times the book is issued in the descending order of count.
mysql> select book_no, count(*) as times_issued from issue group by book_no order by times_issued desc;
+---------+--------------+
| book_no | times_issued |
+---------+--------------+
|     101 |            3 |
|     104 |            2 |
|     102 |            1 |
+---------+--------------+
3 rows in set (0.00 sec)

20) Find the maximum, minimum, total and average penalty amount in the member table.
mysql> select max(penalty_amount), min(penalty_amount), sum(penalty_amount), avg(penalty_amount) from member;
+---------------------+---------------------+---------------------+---------------------+
| max(penalty_amount) | min(penalty_amount) | sum(penalty_amount) | avg(penalty_amount) |
+---------------------+---------------------+---------------------+---------------------+
|               50.00 |               10.00 |               80.00 |           26.666667 |
+---------------------+---------------------+---------------------+---------------------+
1 row in set (0.00 sec)

21) Display the member id and the no of books for each member that has issued more then 2 books.
mysql> select member_id, count(book_no) as books_issued from issue group by member_id having books_issued > 2;
+-----------+--------------+
| member_id | books_issued |
+-----------+--------------+
|         1 |            3 |
+-----------+--------------+
1 row in set (0.00 sec)

22) Display the member id, book no and no of times the same book is issued by the member in the descending order of count.
mysql> select member_id, book_no, count(*) as times_issued from issue group by member_id, book_no order by times_issued desc;
+-----------+---------+--------------+
| member_id | book_no | times_issued |
+-----------+---------+--------------+
|         1 |     101 |            2 |
|         2 |     102 |            1 |
|         1 |     104 |            1 |
|         2 |     104 |            1 |
|         3 |     101 |            1 |
+-----------+---------+--------------+
5 rows in set (0.00 sec)

23) Display the month and no of books issued each month in the descending order of count.
mysql> select monthname(issue_date) as issue_month, count(*) as books_issued from issue group by issue_month order by books_issued desc;
+-------------+--------------+
| issue_month | books_issued |
+-------------+--------------+
| December    |            2 |
| January     |            1 |
| July        |            1 |
| November    |            1 |
| February    |            1 |
+-------------+--------------+
5 rows in set (0.00 sec)

24) List the book_no of all the books that are not issued to any member so far.
mysql> select book_no from books where book_no not in (select distinct book_no from issue);
+---------+
| book_no |
+---------+
|     103 |
+---------+
1 row in set (0.00 sec)

25) List all the member id that exist in member table and has also at least one book issued by them.
mysql> select distinct member_id from issue;
+-----------+
| member_id |
+-----------+
|         1 |
|         2 |
|         3 |
+-----------+
3 rows in set (0.00 sec)

26) List the member ID with highest and lowest no of books issued.
mysql> (select member_id from issue group by member_id order by count(*) desc limit 1)
    -> union all
    -> (select member_id from issue group by member_id order by count(*) asc limit 1);
+-----------+
| member_id |
+-----------+
|         1 |
|         3 |
+-----------+
2 rows in set (0.00 sec)

27) List all the Issue_details for books issued in December and July without using any arithmetic, Logical or comparison operator.
mysql> select * from issue where monthname(issue_date) in ('December', 'July');
+--------------+---------+-----------+------------+-------------+
| lib_issue_id | book_no | member_id | issue_date | return_date |
+--------------+---------+-----------+------------+-------------+
|         7001 |     101 |         1 | 2006-12-10 | 2000-12-31  |
|         7002 |     102 |         2 | 2006-12-25 | 2000-12-31  |
|         7004 |     101 |         1 | 2006-07-04 | 2000-12-31  |
+--------------+---------+-----------+------------+-------------+
3 rows in set (0.00 sec)

28) List the Book_No, Book_Name and Issue_date for all the books that are issued in month of December and belong to category Database.
mysql> select b.book_no, b.book_name, i.issue_date from books b join issue i on b.book_no = i.book_no where monthname(i.issue_date) = 'December' and b.category = 'Database';
+---------+---------------------+------------+
| book_no | book_name           | issue_date |
+---------+---------------------+------------+
|     102 | Oracle-Complete Ref | 2006-12-25 |
+---------+---------------------+------------+
1 row in set (0.00 sec)

29) List the Member Id, Member Name and max books allowed in the descending order of the max books allowed.
mysql> select member_id, member_name, max_books_allowed from member order by max_books_allowed desc;
+-----------+---------------+-------------------+
| member_id | member_name   | max_books_allowed |
+-----------+---------------+-------------------+
|         1 | Richa Sharma  |                 5 |
|         2 | Garima Sen    |                 3 |
|         3 | Gaurav Kumar  |                 3 |
|         4 | Radhika Gupta |                 2 |
|         5 | Saurabh Singh |                 2 |
+-----------+---------------+-------------------+
5 rows in set (0.00 sec)

30) List the Book No, Book Name, Issue_date and Return_Date for all the books issued by Richa Sharma.
mysql> select b.book_no, b.book_name, i.issue_date, i.return_date from issue i join member m on i.member_id = m.member_id join books b on i.book_no = b.book_no where m.member_name = 'Richa Sharma';
+---------+---------------+------------+-------------+
| book_no | book_name     | issue_date | return_date |
+---------+---------------+------------+-------------+
|     101 | Let us C      | 2006-12-10 | 2000-12-31  |
|     104 | Mastering C++ | 2006-01-15 | 2000-12-31  |
|     101 | Let us C      | 2006-07-04 | 2000-12-31  |
+---------+---------------+------------+-------------+
3 rows in set (0.00 sec)

31) List the details of all the members that have issued books in Database category.
mysql> select distinct m.* from member m join issue i on m.member_id = i.member_id join books b on i.book_no = b.book_no where b.category = 'Database';
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         2 | Garima Sen  | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
1 row in set (0.00 sec)

32) List all the books that have highest price in their own category.
mysql> select b1.* from books b1 where b1.cost = (select max(b2.cost) from books b2 where b2.category = b1.category);
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     101 | Let us C            | Yashwant Kanetkar | 450.00 | System   |
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     103 | SQL-PL/SQL          | Ivan Bayross      | 300.00 | RDBMS    |
+---------+---------------------+-------------------+--------+----------+
3 rows in set (0.00 sec)

33) List all the Issue_Details where Issue_date is not within the Acc_open_date and Return_date for that member.
mysql> select i.* from issue i join member m on i.member_id = m.member_id where i.issue_date < m.acc_open_date;
Empty set (0.00 sec)

mysql> select * from member where member_id not in (select distinct member_id from issue);
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
2 rows in set (0.00 sec)

35) List all the members that have issued the same book as issued by Garima.
mysql> select distinct m.* from member m join issue i on m.member_id = i.member_id where i.book_no in (select i2.book_no from issue i2 join member m2 on i2.member_id = m2.member_id where m2.member_name = 'Garima') and m.member_name != 'Garima';
Empty set (0.00 sec)

36) List the Book_Name, Price of all the books that are not returned for more then 30 days.
mysql> select b.book_name, b.cost from books b join issue i on b.book_no = i.book_no where i.return_date is null and datediff(curdate(), i.issue_date) > 30;
+---------------+--------+
| book_name     | cost   |
+---------------+--------+
| Mastering C++ | 300.00 |
| Let us C      | 450.00 |
+---------------+--------+
2 rows in set (0.00 sec)

37) List all the authors and book_name that has more then 1 book written by them.
mysql> select author_name, book_name from books where author_name in (select author_name from books group by author_name having count(*) > 1);
Empty set (0.00 sec)

38) List the member id and member name of the members that have highest and lowest no of books issued.
mysql> select m.member_id, m.member_name from member m join issue i on m.member_id = i.member_id group by m.member_id, m.member_name having count(i.book_no) = (select count(*) from issue group by member_id order by count(*) desc limit 1)
    -> union all
    -> select m.member_id, m.member_name from member m join issue i on m.member_id = i.member_id group by m.member_id, m.member_name having count(i.book_no) = (select count(*) from issue group by member_id order by count(*) asc limit 1);
+-----------+--------------+
| member_id | member_name  |
+-----------+--------------+
|         1 | Richa Sharma |
|         3 | Gaurav Kumar |
+-----------+--------------+
2 rows in set (0.00 sec)

39) List the details of highest 3 priced books.
mysql> select * from books order by cost desc limit 3;
+---------+---------------------+-------------------+--------+----------+
| book_no | book_name           | author_name       | cost   | category |
+---------+---------------------+-------------------+--------+----------+
|     102 | Oracle-Complete Ref | Loni              | 550.00 | Database |
|     101 | Let us C            | Yashwant Kanetkar | 450.00 | System   |
|     103 | SQL-PL/SQL          | Ivan Bayross      | 300.00 | RDBMS    |
+---------+---------------------+-------------------+--------+----------+
3 rows in set (0.00 sec)

40) List the total cost of all the books that are currently issued but not returned.
mysql> select sum(b.cost) from books b join issue i on b.book_no = i.book_no where i.return_date is null;
+-------------+
| sum(b.cost) |
+-------------+
|      750.00 |
+-------------+
1 row in set (0.00 sec)

41) List the details of the book that has been issued maximum no of times.
mysql> select b.* from books b join issue i on b.book_no = i.book_no group by b.book_no order by count(*) desc limit 1;
+---------+-----------+-------------------+--------+----------+
| book_no | book_name | author_name       | cost   | category |
+---------+-----------+-------------------+--------+----------+
|     101 | Let us C  | Yashwant Kanetkar | 450.00 | System   |
+---------+-----------+-------------------+--------+----------+
1 row in set (0.00 sec)

42) List how many books are issued to lifetime members.
mysql> select count(*) from issue i join member m on i.member_id = m.member_id where m.membership_type = 'lifetime';
+----------+
| count(*) |
+----------+
|        3 |
+----------+
1 row in set (0.00 sec)

43) List all member types and how many members are there in each type.
mysql> select membership_type, count(*) from member group by membership_type;
+-----------------+----------+
| membership_type | count(*) |
+-----------------+----------+
| Lifetime        |        1 |
| Annual          |        2 |
| Quarterly       |        1 |
| Half Yearly     |        1 |
+-----------------+----------+
4 rows in set (0.00 sec)

44) List first 5 members who had joined library.
mysql> select * from member order by acc_open_date asc limit 5;
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma  | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 |
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
|         3 | Gaurav Kumar  | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
|         2 | Garima Sen    | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

45) List the members with their member type, who have issued books during the period 1st December to 31st December.
mysql> select distinct m.*, m.membership_type from member m join issue i on m.member_id = i.member_id where month(i.issue_date) = 12 and day(i.issue_date) between 1 and 31;
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+-----------------+
| member_id | member_name  | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount | membership_type |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+-----------------+
|         1 | Richa Sharma | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 | Lifetime        |
|         2 | Garima Sen   | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL | Annual          |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+-----------------+
2 rows in set (0.00 sec)

46) List all the members who have not returned books yet.
mysql> select distinct m.* from member m join issue i on m.member_id = i.member_id where i.return_date is null;
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name  | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         2 | Garima Sen   | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
|         3 | Gaurav Kumar | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
+-----------+--------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
2 rows in set (0.00 sec)

47) List all the members who joined library on the same date Garima joined.
mysql> select * from member where acc_open_date = (select acc_open_date from member where member_name = 'Garima') and member_name != 'Garima';
Empty set (0.00 sec)

48) List all the members who has issued books from author “Loni” in the month of December
mysql> select distinct m.* from member m join issue i on m.member_id = i.member_id join books b on i.book_no = b.book_no where b.author_name = 'Loni' and monthname(i.issue_date) = 'December';
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         2 | Garima Sen  | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
+-----------+-------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
1 row in set (0.00 sec)

49) List names of the authors whose books are least issued by lifetime members.
mysql> select b.author_name from books b join issue i on b.book_no = i.book_no join member m on i.member_id = m.member_id where m.membership_type = 'lifetime' group by b.author_name order by count(*) limit 1;
+-------------+
| author_name |
+-------------+
| Scott Urman |
+-------------+
1 row in set (0.00 sec)

50) List the names of members who has issued the books whose cost is more than 300 rupees and whose author is “Scott Urman”
mysql> select distinct m.member_name from member m join issue i on m.member_id = i.member_id join books b on i.book_no = b.book_no where b.cost > 300 and b.author_name = 'Scott Urman';
Empty set (0.00 sec)

51) List all lifetime members who joined library during 1st January 2006 to 31st December 2006 but issued only one book.
mysql> select m.* from member m join issue i on m.member_id = i.member_id where m.membership_type = 'lifetime' and year(m.acc_open_date) = 2006 group by m.member_id having count(i.book_no) = 1;
Empty set (0.00 sec)

Q52) Modify the Penalty_Amount for Garima Sen to Rs 100.
mysql> select * from member;
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma  | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 |
|         2 | Garima Sen    | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |           NULL |
|         3 | Gaurav Kumar  | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

mysql> update member set penalty_amount = 100 where member_name = 'Garima Sen';
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from member;
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
| member_id | member_name   | member_address | acc_open_date | membership_type | fees_paid | max_books_allowed | penalty_amount |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
|         1 | Richa Sharma  | Pune           | 2005-12-10    | Lifetime        |      2500 |                 5 |          50.00 |
|         2 | Garima Sen    | Pune           | 2006-04-12    | Annual          |      1000 |                 3 |         100.00 |
|         3 | Gaurav Kumar  | Mumbai         | 2006-02-14    | Annual          |      1000 |                 3 |          20.00 |
|         4 | Radhika Gupta | Pune           | 2006-01-08    | Quarterly       |       300 |                 2 |           NULL |
|         5 | Saurabh Singh | Mumbai         | 2006-03-15    | Half Yearly     |       500 |                 2 |          10.00 |
+-----------+---------------+----------------+---------------+-----------------+-----------+-------------------+----------------+
5 rows in set (0.00 sec)

